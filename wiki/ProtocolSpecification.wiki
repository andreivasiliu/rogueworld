#summary Communication protocol used between RogueWorld clients and the server.
#labels Featured

= Design Goals =

Even though initially tested over TCP, the intent is to provide a fast, safe protocol for use with UDP. Packets must be small and error-safe, and subsequent information about an object or aspect of the game should make all such previous packets obsolete. The goal is to support a packet loss rate of at least 5-10%.

*Status*: _Partially Planned_.

= High-Level Specification =

In case of any errors (e.g. invalid user/password), the communication will end with a Close pachet.

Login Protocol:
  * Client:
    * send 'login user, password'
  * Server:
    * send 'userinfo real_name, position'
    * send 'map'
  * Client:
    * send 'enterworld'

= Low-Level Specification =

Pachet Data Types:
  * *int8*: 1 byte
  * *int32*: 4 bytes in network-order (big-endian).
  * *zstring*: null-terminated string.

Global Pachet Header:
{{{
 <int32><int32><int32>
  ^      ^      ^-- message ID (mid)
  |      \-- message number
  \-- message length
}}}

Login Pachet (_client_) (mid = MSG_LOGIN):
{{{
 <zstring>
  ^-- name
}}}

Close Pachet (_both_) (mid = MSG_CLOSE):
{{{
 <zstring>
  ^-- reason
}}}

UserInfo Pachet (_server_) (mid = MSG_USERINFO):
{{{
 <zstring><int8><int8>
  ^        ^     ^-- position x on map
  |        \-- position y on map
  \-- properly capitalized player-name
}}}

Map Pachet (_server_) (mid = MSG_MAP):
{{{
 <int8><int8><zstring>
  ^     ^     ^-- RLE-encoded map representation
  |     \-- map width
  \-- map height
}}}

EnterWorld (_client_) (mid = MSG_ENTERWORLD)
{{{
 <empty>
}}}